!function(e){"undefined"!=typeof module&&"object"==typeof exports?module.exports=e():"function"==typeof define&&define.amd?define("$L",e):window.$L=e()}(function(){return{compress(e){if(!e||"string"!=typeof e)throw Error("i can't encode this junk, goodbye sista");const n={},o=[],t=e.split(""),r=t.length;let i,c=1,d=256,s=t[0];const h=performance.now();for(;c<r;c++)n[s+(i=t[c])]?s+=i:(o.push(s.length>1?n[s]:s.charCodeAt(0)),n[s+i]=d++,s=i);o.push(s.length>1?n[s]:s.charCodeAt(0));const f=performance.now();return{dict:n,string:e,encodedString:o.map(e=>String.fromCharCode(e)).join(""),originalLength:r,endcodedLength:o.length,executionTime:`${f-h}ms`}},decompress(e){if(!e||"string"!=typeof e)throw Error("you want me to decode this jenk? goodbye sista");const n={},o=[],t=e.split(""),r=t.length;let i=1,c=256,d=t[0],s=d,h=d;o.push(s);const f=performance.now();for(;i<r;i++){const e=t[i].charCodeAt(0);s=e<256?t[i]:n[e]?n[e]:h+d,o.push(s),d=s.charAt(0),n[c++]=h+d,h=s}const g=performance.now(),p=o.join("");return{dict:n,decodedString:p,string:e,originalLength:r,decodedLength:p.length,executionTime:`${g-f}ms`}}}});